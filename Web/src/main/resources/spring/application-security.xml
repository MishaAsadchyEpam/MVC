<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:security="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!--<security:http pattern="/content/**" security="none"/>-->

    <security:global-method-security
            jsr250-annotations="enabled"
            pre-post-annotations="enabled"
            secured-annotations="enabled"/>

    <!--
        pre-post-annotations="enabled" =
        использовать выражения @PreAuthorize для доступа к методам
        @PreAuthorize("hasRole('" + Roles.ROLE_USER + "') and|or hasRole('" + Roles.ROLE_ADMIN + "')")
    -->

    <beans:bean
            class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
            id="passwordEncoder"/>

    <beans:bean id="saltSource"
                class="org.springframework.security.authentication.dao.ReflectionSaltSource"
            >
        <beans:property name="userPropertyToUse" value="passwordSalt"/>
    </beans:bean>
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="usersService">
            <security:password-encoder ref="passwordEncoder">
                <security:salt-source ref="saltSource"/>
            </security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>


    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>

    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/user/**" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <!--<security:intercept-url pattern="/account/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>-->

        <security:session-management invalid-session-url="/">
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"
                                          session-registry-ref="sessionRegistry"/>
        </security:session-management>

        <security:form-login login-page="/account/login"
                             authentication-failure-url="/account/login"
                             default-target-url="/"/>
        <security:logout logout-url="/logout"/>
    </security:http>


</beans:beans>